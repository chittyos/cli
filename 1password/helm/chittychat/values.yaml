replicaCount: 3

image:
  repository: ghcr.io/yourusername/chittychat
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 3000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  hosts:
    - host: chittychat.example.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: chittychat-tls
      hosts:
        - chittychat.example.com

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env:
  NODE_ENV: "production"
  PORT: "3000"
  S3_BUCKET: "chittychat-uploads"
  AWS_REGION: "us-west-2"

secrets:
  openaiApiKey: ""
  databaseUrl: ""
  oauthClientId: ""
  oauthClientSecret: ""
  jwtSecret: ""
  supabaseUrl: ""
  supabaseAnonKey: ""

redis:
  enabled: true
  auth:
    enabled: false
  master:
    resources:
      limits:
        memory: 256Mi
        cpu: 100m
      requests:
        memory: 128Mi
        cpu: 50m

monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    path: /metrics

healthCheck:
  enabled: true
  livenessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /ready
      port: http
    initialDelaySeconds: 5
    periodSeconds: 5